{"version":3,"file":"static/js/530.e1a1f028.chunk.js","mappings":"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","sources":["webpack://roman-react-app/./src/components/Users/Users.module.css?b9d0","selectors/usersSelectors.js","webpack://roman-react-app/./src/components/common/Pagination/Pagination.module.css?82a8","components/common/Pagination/Pagination.jsx","components/Users/Users.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Users_main__0PEo3\",\"users\":\"Users_users__TYULk\",\"user\":\"Users_user__bWaKv\",\"userPhoto\":\"Users_userPhoto__83sBR\",\"userName\":\"Users_userName__fIwYa\",\"followBtn\":\"Users_followBtn__ZfpLI\",\"paginationNumbers\":\"Users_paginationNumbers__azUob\",\"paginationNumber\":\"Users_paginationNumber__wTtp6\",\"paginationNumberActive\":\"Users_paginationNumberActive__rfwkj\",\"paginationNumberHold\":\"Users_paginationNumberHold__vCr+O\"};","export const getUsersSelector = (state) => {\r\n    return state.usersPage.users\r\n}\r\n\r\nexport const getUsersPageSizeSelector = (state) => {\r\n    return state.usersPage.pageSize\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.usersPage.totalUsersCount\r\n}\r\n\r\nexport const getCurrentPageSelector = (state) => {\r\n    return state.usersPage.currentPage\r\n}\r\n\r\nexport const getPagesLimitSelector = (state) => {\r\n    return state.usersPage.pagesLimit\r\n}\r\n\r\nexport const getIsFetchingSelector = (state) => {\r\n    return state.usersPage.isFetching\r\n}\r\n\r\nexport const getDisabledSubscribeButtonSelector = (state) => {\r\n    return state.usersPage.disabledSubscribeButton\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"paginationNumbers\":\"Pagination_paginationNumbers__Nhtm+\",\"paginationNumber\":\"Pagination_paginationNumber__-D4vq\",\"paginationNumberActive\":\"Pagination_paginationNumberActive__+vHi7\",\"paginationNumberHold\":\"Pagination_paginationNumberHold__qoRx-\"};","import React, {useEffect, useMemo, useState} from \"react\"\r\nimport styles from \"./Pagination.module.css\"\r\n\r\nlet Pagination = ({onPageChanged, currentPage, pagesLimit, totalItemsCount, pageSize}) => {\r\n    let totalPages = useMemo(() => {\r\n        return Math.ceil(totalItemsCount / pageSize)\r\n    }, [totalItemsCount, pageSize])\r\n\r\n    let leftPortionPage = useMemo(() => {\r\n        return ((Math.floor((currentPage - 1) / pagesLimit) * pagesLimit) + 1)\r\n    }, [currentPage, pagesLimit])\r\n\r\n    let rightPortionPage = useMemo(() => {\r\n        return leftPortionPage + pagesLimit - 1\r\n    }, [leftPortionPage, pagesLimit])\r\n\r\n    let pagesItems = useMemo(() => {\r\n        let array = []\r\n        for (let i = 1; i <= totalPages; i++) {\r\n            array.push(i)\r\n        }\r\n        return array\r\n    }, [totalPages])\r\n\r\n    let pagesElements = pagesItems\r\n        .filter(p => p >= leftPortionPage && p <= rightPortionPage)\r\n        .map(p => <div key={p} onClick={(e) => {\r\n            onPageChanged(p)\r\n        }} className={currentPage === p ? styles.paginationNumberActive : styles.paginationNumber}>\r\n            {p}\r\n        </div>)\r\n\r\n    return (\r\n        <div className={styles.paginationNumbers}>\r\n            <div\r\n                className={currentPage > pagesLimit ? styles.paginationNumber : styles.paginationNumberHold}\r\n                onClick={() => {\r\n                    onPageChanged(1)\r\n                }}>\r\n                First page\r\n            </div>\r\n            <div\r\n                onClick={() => {\r\n                    onPageChanged(currentPage - 1)\r\n                }}\r\n                className={currentPage > 1 ? styles.paginationNumber : styles.paginationNumberHold}>\r\n                Previous\r\n            </div>\r\n            {pagesElements}\r\n            <div\r\n                onClick={() => {\r\n                    onPageChanged(currentPage + 1)\r\n                }}\r\n                className={currentPage === totalPages ? styles.paginationNumberHold : styles.paginationNumber}>\r\n                Next\r\n            </div>\r\n            <div\r\n                className={currentPage <= (totalPages - pagesLimit) ? styles.paginationNumber : styles.paginationNumberHold}\r\n                onClick={() => {\r\n                    onPageChanged(totalPages)\r\n                }}>\r\n                Last page\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Pagination","import React, {useEffect, useMemo, useState} from \"react\"\r\nimport styles from './Users.module.css'\r\nimport userIcon from '../assets/images/account.png'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    follow,\r\n    followUserThunk,\r\n    getUsersThunk,\r\n    setCurrentPage,\r\n    setDisabledButtonValue,\r\n    unFollow, unfollowUserThunk\r\n} from \"../../redux/usersPageReducer\";\r\nimport {withAuthUserRedirect} from \"../../hoc/withAuthUserRedirect\";\r\nimport {\r\n    getCurrentPageSelector, getDisabledSubscribeButtonSelector, getIsFetchingSelector, getPagesLimitSelector,\r\n    getTotalUsersCountSelector,\r\n    getUsersPageSizeSelector,\r\n    getUsersSelector\r\n} from \"../../selectors/usersSelectors\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Pagination from \"../common/Pagination/Pagination\";\r\n\r\nlet Users = React.memo(({users, pageSize, totalUsersCount, currentPage, pagesLimit, isFetching, disabledSubscribeButton,\r\n                            follow,\r\n                            unFollow,\r\n                            setCurrentPage,\r\n                            setDisabledButtonValue,\r\n                            getUsersThunk,\r\n                            followUserThunk,\r\n                            unfollowUserThunk}) => {\r\n    useEffect(() => {\r\n        getUsersThunk(currentPage, pageSize)\r\n    }, [users.length])\r\n\r\n    const onPageChanged = (pageNumber) => {\r\n        setCurrentPage(pageNumber)\r\n        getUsersThunk(pageNumber, pageSize)\r\n        window.scrollTo({behavior: 'smooth', top: '0px'})\r\n    }\r\n\r\n    const onFollowUser = (userId) => {\r\n        followUserThunk(userId)\r\n    }\r\n\r\n    const onUnfollowUser = (userId) => {\r\n        unfollowUserThunk(userId)\r\n    }\r\n\r\n    const usersElements = users.map(u => (\r\n        <div className={styles.user} key={u.id}>\r\n            <div className={styles.userPhoto}>\r\n                <NavLink to={'/profile/' + u.id}>\r\n                    <img src={u.photos.small != null ? u.photos.small : userIcon}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={styles.userName}>\r\n                {u.name}\r\n            </div>\r\n            <div className={styles.followBtn}>\r\n                {u.followed\r\n                    ? <button disabled={disabledSubscribeButton.some(id => id === u.id)}\r\n                              onClick={() => {\r\n                                  onUnfollowUser(u.id)\r\n                              }}>Unfollow</button>\r\n                    : <button disabled={disabledSubscribeButton.some(id => id === u.id)}\r\n                              onClick={() => {\r\n                                  onFollowUser(u.id)\r\n                              }}>Follow</button>\r\n                }\r\n            </div>\r\n        </div>\r\n    ))\r\n\r\n    return (\r\n        isFetching\r\n                ? <Preloader/>\r\n                : <div className={styles.main}>\r\n                    <div className={styles.users}>\r\n                        {usersElements}\r\n                        <Pagination onPageChanged={onPageChanged} currentPage={currentPage} pagesLimit={pagesLimit}\r\n                                    totalItemsCount={totalUsersCount} pageSize={pageSize}/>\r\n                    </div>\r\n                </div>\r\n    )\r\n})\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSelector(state),\r\n        pageSize: getUsersPageSizeSelector(state),\r\n        totalUsersCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPageSelector(state),\r\n        pagesLimit: getPagesLimitSelector(state),\r\n        isFetching: getIsFetchingSelector(state),\r\n        disabledSubscribeButton: getDisabledSubscribeButtonSelector(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        follow,\r\n        unFollow,\r\n        setCurrentPage,\r\n        setDisabledButtonValue,\r\n        getUsersThunk,\r\n        followUserThunk,\r\n        unfollowUserThunk\r\n    }),\r\n    withAuthUserRedirect\r\n)(Users)"],"names":["getUsersSelector","state","usersPage","users","getUsersPageSizeSelector","pageSize","getTotalUsersCountSelector","totalUsersCount","getCurrentPageSelector","currentPage","getPagesLimitSelector","pagesLimit","getIsFetchingSelector","isFetching","getDisabledSubscribeButtonSelector","disabledSubscribeButton","onPageChanged","totalItemsCount","totalPages","useMemo","Math","ceil","leftPortionPage","floor","rightPortionPage","pagesElements","array","i","push","filter","p","map","onClick","e","className","styles","Users","React","setCurrentPage","follow","unFollow","getUsersThunk","setDisabledButtonValue","followUserThunk","unfollowUserThunk","useEffect","length","usersElements","u","to","id","src","photos","small","userIcon","name","followed","disabled","some","userId","Preloader","pageNumber","window","scrollTo","behavior","top","compose","connect","withAuthUserRedirect"],"sourceRoot":""}